marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndnaroi,arg)
}
if(DNA==TRUE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc,arg)
}
}
coloc_wrapper=function(image_directory,
metadata_directory,
results_directory,
CoMarker_directory,
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="CD68",
marker2='HLA-DR',
marker3='',
marker4='',
marker5='',
region_of_interest='Ab',
outcome='trem2_all',
remove_outliers=TRUE,
outliers_threshold=4){
library(tidyverse)
library(readr)
library(stringr)
library(dplyr)
library(rqdatatable)
library(rlist)
library(ggplot2)
library(gridExtra)
library(ggsignif)
library(ggpubr)
library(paletteer)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
source(paste0(CoMarker_directory,"Functions/coloc_nroi.R"))
source(paste0(CoMarker_directory,"Functions/coloc_ndnaroi.R"))
source(paste0(CoMarker_directory,"Functions/coloc_ndna.R"))
source(paste0(CoMarker_directory,"Functions/coloc.R"))
if(DNA==TRUE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_nroi,arg)
}
if(DNA==FALSE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndna,arg)
}
if(DNA==FALSE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndnaroi,arg)
}
if(DNA==TRUE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc,arg)
}
}
coloc_wrapper(image_directory="/Users/samboulger/Desktop/CoMarker/SampleDirectory/Images/",
results_directory="/Users/samboulger/Desktop/CoMarker/SampleDirectory/",
metadata_directory='/Users/samboulger/Desktop/CoMarker/SampleDirectory/Metadata/',
CoMarker_directory='/Users/samboulger/Desktop/CoMarker/',
DNA=TRUE,
ROI=TRUE,
number_marker=1,
reference_marker="Iba1",
marker1="CD68",
marker2='',
marker3='',
marker4='',
marker5='',
region_of_interest='Ab',
outcome='AD/CTRL',
remove_outliers=TRUE,
outliers_threshold=3.5)
coloc_wrapper=function(image_directory,
metadata_directory,
results_directory,
CoMarker_directory,
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="CD68",
marker2='HLA-DR',
marker3='',
marker4='',
marker5='',
region_of_interest='Ab',
outcome='AD/CTRL',
remove_outliers=TRUE,
outliers_threshold=4){
library(tidyverse)
library(readr)
library(stringr)
library(dplyr)
library(rqdatatable)
library(rlist)
library(ggplot2)
library(gridExtra)
library(ggsignif)
library(ggpubr)
library(paletteer)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
source(paste0(CoMarker_directory,"Functions/coloc_nroi.R"))
source(paste0(CoMarker_directory,"Functions/coloc_ndnaroi.R"))
source(paste0(CoMarker_directory,"Functions/coloc_ndna.R"))
source(paste0(CoMarker_directory,"Functions/coloc.R"))
if(DNA==TRUE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_nroi,arg)
}
if(DNA==FALSE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndna,arg)
}
if(DNA==FALSE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndnaroi,arg)
}
if(DNA==TRUE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc,arg)
}
}
coloc_wrapper(image_directory="/Users/samboulger/Desktop/Sen_full/",
results_directory="/Users/samboulger/Desktop/Sen_full/",
metadata_directory='/Users/samboulger/Desktop/Sen_data/',
CoMarker_directory='/Users/samboulger/Documents/GitHub/CoMarker/',
DNA=TRUE,
ROI=TRUE,
number_marker=5,
reference_marker="Iba1",
marker1="GLB1",
marker2='p16',
marker3='p21',
marker4='yH2Ax',
marker5='Ki67',
region_of_interest="GLUT1",
outcome="AD/CTRL",
remove_outliers=TRUE,
outliers_threshold=3.5)
length(unique(results$CaseID))
View(coloc)
coloc_wrapper(image_directory="/Users/samboulger/Desktop/Sen_full2/",
results_directory="/Users/samboulger/Desktop/Sen_full2/",
metadata_directory='/Users/samboulger/Desktop/Sen_data/',
CoMarker_directory='/Users/samboulger/Documents/GitHub/CoMarker/',
DNA=TRUE,
ROI=TRUE,
number_marker=5,
reference_marker="Iba1",
marker1="GLB1",
marker2='p16',
marker3='p21',
marker4='yH2Ax',
marker5='Ki67',
region_of_interest="GLUT1",
outcome="AD/CTRL",
remove_outliers=TRUE,
outliers_threshold=3.5)
coloc_wrapper=function(image_directory,
metadata_directory,
results_directory,
CoMarker_directory,
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="CD68",
marker2='HLA-DR',
marker3='',
marker4='',
marker5='',
region_of_interest='Ab',
outcome='AD/CTRL',
remove_outliers=TRUE,
outliers_threshold=4){
library(tidyverse)
library(readr)
library(stringr)
library(dplyr)
library(rqdatatable)
library(rlist)
library(ggplot2)
library(gridExtra)
library(ggsignif)
library(ggpubr)
library(paletteer)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
source(paste0(CoMarker_directory,"Functions/coloc_nroi.R"))
source(paste0(CoMarker_directory,"Functions/coloc_ndnaroi.R"))
source(paste0(CoMarker_directory,"Functions/coloc_ndna.R"))
source(paste0(CoMarker_directory,"Functions/coloc.R"))
if(DNA==TRUE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_nroi,arg)
}
if(DNA==FALSE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndna,arg)
}
if(DNA==FALSE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc_ndnaroi,arg)
}
if(DNA==TRUE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
metadata_directory=metadata_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc,arg)
}
}
coloc_wrapper(image_directory="/Users/samboulger/Desktop/Sen_full2/",
results_directory="/Users/samboulger/Desktop/Sen_full2/",
metadata_directory='/Users/samboulger/Desktop/Sen_data/',
CoMarker_directory='/Users/samboulger/Documents/GitHub/CoMarker/',
DNA=TRUE,
ROI=TRUE,
number_marker=5,
reference_marker="Iba1",
marker1="GLB1",
marker2='p16',
marker3='p21',
marker4='yH2Ax',
marker5='Ki67',
region_of_interest="GLUT1",
outcome="AD/CTRL",
remove_outliers=TRUE,
outliers_threshold=3.5)
image_directory="/Users/samboulger/Desktop/Sen_full2/"
results_directory="/Users/samboulger/Desktop/Sen_full2/"
metadata_directory='/Users/samboulger/Desktop/Sen_data/'
CoMarker_directory='/Users/samboulger/Documents/GitHub/CoMarker/'
DNA=TRUE
ROI=TRUE
number_marker=5
reference_marker="Iba1"
marker1="GLB1"
marker2='p16'
marker3='p21'
marker4='yH2Ax'
marker5='Ki67'
region_of_interest="GLUT1"
outcome="AD/CTRL"
remove_outliers=TRUE
outliers_threshold=3.5
library(tidyverse)
library(readr)
library(stringr)
library(dplyr)
library(rqdatatable)
library(rlist)
library(ggplot2)
library(gridExtra)
library(ggsignif)
library(ggpubr)
library(paletteer)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
#####
sigFunc = function(x){
if(x < 0.001){"***"}
else if(x < 0.01){"**"}
else if(x < 0.05){"*"}
else{NA}}
library(dplyr)
metadata=read_csv(paste0(metadata_directory,'metadata.csv'))
metadata=metadata %>%  mutate(across(where(is_character),as_factor))
setwd(image_directory)
if(number_marker==1){
files=list.files(pattern = "onemarker.csv$", recursive = TRUE)
}
if(number_marker==2){
files=list.files(pattern = "twomarkers.csv$", recursive = TRUE)
}
if(number_marker==3){
files=list.files(pattern = "threemarkers.csv$", recursive = TRUE)
}
if(number_marker==4){
files=list.files(pattern = "fourmarkers.csv$", recursive = TRUE)
}
if(number_marker==5){
files=list.files(pattern = "fivemarkers.csv$", recursive = TRUE)
}
my.data <- list()
for (i in 1:length(files)){
my.data[[i]] <- read.csv(files[[i]])
}
names(my.data)=substr(files,1,12)
df <- do.call("rbind", my.data)
## reorganise colnames
df$CaseID=rownames(df)
df$CaseID=sub("\\i.*", "", df$CaseID)
df$CaseID=gsub(" ","",df$CaseID)
rep=c('i','ii','iii','iv','v','vi')
replicate=sapply(rownames(df), function(x){
rep[str_detect(x,rep)]
})
replicate_list=lapply(replicate, function(x){
x[[length(x)]]
})
rep_df=do.call(rbind,  replicate_list)
df$replicate=paste0(df$CaseID, ' ',rep_df[,1])
if(any(grepl("package:plyr", search()))) detach("package:plyr") else message("plyr not loaded")
# Filter count outliers
df$Slice=as.factor(df$Slice)
df$Count=as.numeric(df$Count)
quantiles=df %>%
group_by(Slice)%>%
summarize(sdx0=-outliers_threshold*sd(Count, na.rm=TRUE)+mean(Count, na.rm=TRUE),
sdx1=outliers_threshold*sd(Count, na.rm=TRUE)+mean(Count, na.rm=TRUE))
`%!in%` <- Negate(`%in%`)
markers=c(reference_marker,marker1,marker2,marker3,marker4,marker5, region_of_interest,"nucleus")
df_filtered=df[df$Slice %in% markers,]
flags=df_filtered %>% left_join(quantiles, by = 'Slice') %>%
filter(Count > sdx1| Count < sdx0)
replicated_flags=flags$replicate
if(remove_outliers==TRUE){
df=df[which(df$replicate %!in% replicated_flags),]
}
unique(df$CaseID)
length(unique(df$CaseID))
setwd("~/Documents/GitHub/CoMarkerMAP")
bookdown::render_book(index.Rmd)
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd')

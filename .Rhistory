# A basic scatterplot with color depending on Species
ggplot(iris, aes(x=ManualArea, y=ScriptArea, color=Species)) +
geom_point(size=6) +
ggplot(iris, aes(x=ManualArea, y=ScriptArea, color=Species)) +
geom_point(size=6)
rlang::last_error()
# load ggplot2
library(tidyverse)
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
# A basic scatterplot with color depending on Species
ggplot(data = Blind_Manual_Counts, aes(x=ManualArea, y=ScriptArea)) +
geom_point()
# load ggplot2
library(tidyverse)
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
# A basic scatterplot with color depending on Species
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=ScriptArea)) +
geom_point()
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
view(Blind_Manual_Counts)
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
view(Blind_Manual_Counts)
# A basic scatterplot with color depending on Species
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=ScriptArea)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Script)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y1=Script, y2=Eroded)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Script, y=Eroded)) +
geom_point()
# A basic scatterplot with color depending on Species
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Script)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Script)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Erode 2)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Erode 3)) +
geom_point()
# load ggplot2
library(tidyverse)
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
view(Blind_Manual_Counts)
# A basic scatterplot with color depending on Species
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Script)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded2)) +
geom_point()
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded3)) +
geom_point()
library(tidyverse)
library(readxl)
Blind_Manual_Counts <- read_excel("OneDrive - Nexus365/Imperial/Blind Manual Counts.xlsx",
sheet = "Plaque Area")
view(Blind_Manual_Counts)
# A basic scatterplot with color depending on Species
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Script)) +
geom_point()
xlim(700,4000)
ylim(700,4000)
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded)) +
geom_point()
xlim(700,4000)
ylim(700,4000)
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded2)) +
geom_point()
xlim(700,4000)
ylim(700,4000)
ggplot(data = Blind_Manual_Counts, aes(x=Manual, y=Eroded3)) +
geom_point()
xlim(700,4000)
ylim(700,4000)
plot_data = ggplot_build(plot_list)
plot_list=readRDS('/Users/samboulger/Desktop/GLUT1 HistoCAT/results/plot_list.rds')
metadata=readRDS('/Users/samboulger/Desktop/GLUT1 HistoCAT/results/metadata.rds')
list_param=readRDS('/Users/samboulger/Desktop/GLUT1 HistoCAT/results/list_param.rds')
##Parameters
image_directory=list_param$image_directory
results_directory=list_param$results_directory
reference_marker=list_param$reference_marker
number_marker=list_param$number_marker
marker1=list_param$marker1
marker2=list_param$marker2
marker3=list_param$marker3
marker4=list_param$marker4
marker5=list_param$marker5
region_of_interest=list_param$region_of_interest
outcome=list_param$outcome
plot_data = ggplot_build(plot_list)
for (name in names(plot_list)){
plot_data[[name]] = ggplot_build(plot_list[[name]])}
library(ggplot2)
library(ggsignif)
for (name in names(plot_list)){
plot_data[[name]] = ggplot_build(plot_list[[name]])}
plot_data = df()
plot_data = list()
for (name in names(plot_list)){
plot_data[[name]] = ggplot_build(plot_list[[name]])}
View(plot_list)
View(plot_data)
b=list()
for(name in names(plot_list)){
b[[paste(name)]]=plot_data[[name]][["data"]][[3]][["annotation"]]
}
View(b)
View(list_param)
View(plot_data)
```{r echo=FALSE}
View(b)
signif=list()
for(name in names(plot_list)){
signif[[paste(name)]]=plot_data[[name]][["data"]][[3]][["annotation"]]
}
```{r echo=FALSE}
for(name in names(plot_list)){
if signif[[paste(name)]] != "'ns' 'ns' 'ns'"){
```{r echo=FALSE}
for(name in names(signif)){
if (signif[[name]] != "'ns' 'ns' 'ns'"){
print(plot_list[[name]])
}}
for(name in names(signif)){
if (signif[[name]] != "'ns'"){
print(plot_list[[name]])
}}
```{r echo=FALSE}
```{r echo=FALSE}
sig_count = sum(signif[[name]] != "'ns' 'ns' 'ns'")
View(signif)
plot_data[["CD163 Area Outside of ROI (Sq Micrometers)"]][["data"]][[3]][["annotation"]]
print(sigcount)
print(sig_count)
sig_count = sum(signif[[name]] != "'*' '*' '*'")
print(sig_count)
sig_count = sum(signif != "'*' '*' '*'")
sig_count = sum(signif != "'*' '*' '*'")
sig_count = sum(signif != "'ns' 'ns' 'ns'")
sig_count = sum(signif != "'ns' 'ns' 'ns'")
print(sig_count)
View(signif)
sig_count = signif.count(signif[[name]],value != "'ns' 'ns' 'ns'")
sig_count = list.count(signif[[name]],value != "'ns' 'ns' 'ns'")
install.package(rlist)
library(rlist)
sig_count = list.count(signif[[name]],value != "'ns' 'ns' 'ns'")
sig_count = list.count(signif,signif[[name]] != "'ns' 'ns' 'ns'")
print(sig_count)
sig_count = list.count(signif,signif != "'ns' 'ns' 'ns'")
sig_count = list.count(signif[[name]],signif[[name]] != "'ns' 'ns' 'ns'")
sig_count = list.count(signif,'value' != "'ns' 'ns' 'ns'")
sig_count = list.count(signif != "'ns' 'ns' 'ns'")
sig_count = list.count(signif[[name]] != "'ns' 'ns' 'ns'")
sig_count = list.count(signif[[name,3]] != "'ns' 'ns' 'ns'")
sig_mat = matrix(signif)
View(sig_mat)
sig_count = list.count(signif != c("ns", "ns", "ns"))
sig_count = list.count(signif, V1 != c("ns", "ns", "ns"))
View(signif)
View(signif)
View(signif)
plot_data[[name]][["data"]][[3]][["annotation"]]
View(signif)
sig_count = sum(unlist(lapply(signif,function(x){x==c('*')})))/3
sig_count = sum(unlist(lapply(signif,function(x){x==c('ns')})))/3
sig_count = sum(unlist(lapply(list,function(x){x==c('*') |x==c('**') |x==c('***')})))/3
sig_count = sum(unlist(lapply(signif,function(x){x!=c('ns')})))/3
sig_count = sum(unlist(lapply(signif,function(x){x!=c('*')})))/3
signif=list()
for(name in names(plot_list)){
signif[[paste(name)]]=plot_data[[name]][["data"]][[3]][["annotation"]]
}
plot_list=readRDS('/Users/samboulger/Desktop/Manual Counts/results/plot_list.rds')
metadata=readRDS('/Users/samboulger/Desktop/Manual Counts/results/metadata.rds')
list_param=readRDS('/Users/samboulger/Desktop/Manual Counts/results/list_param.rds')
##Parameters
image_directory=list_param$image_directory
results_directory=list_param$results_directory
reference_marker=list_param$reference_marker
number_marker=list_param$number_marker
marker1=list_param$marker1
marker2=list_param$marker2
marker3=list_param$marker3
marker4=list_param$marker4
marker5=list_param$marker5
region_of_interest=list_param$region_of_interest
outcome=list_param$outcome
plot_data = list()
for (name in names(plot_list)){
plot_data[[name]] = ggplot_build(plot_list[[name]])}
View(signif)
View(plot_list)
library(plyr)
library(knitr)
library(data.table)
library(ggplot2)
library(ggsignif)
library(plotly)
library(clinUtils)
library(flexdashboard)
library(rlist)
plot_data = list()
for (name in names(plot_list)){
plot_data[[name]] = ggplot_build(plot_list[[name]])}
list_sig=list()
list_sig=lapply(names(plot_list), function(x){ b=formals(environment(plot_list[[paste(x)]][["layers"]][[3]][["computed_stat_params"]][["test"]])[["power.t.test"]])[["sig.level"]]; return(b) })
signif=list()
for(name in names(plot_list)){
signif[[paste(name)]]=plot_data[[name]][["data"]][[3]][["annotation"]]
}
sig_count = sum(unlist(lapply(signif,function(x){x!=c('ns')})))/3
View(signif)
install.packages("bookdown")
install.packages("bookdown")
coloc_wrapper=function(image_directory,
results_directory,
CoMarker_directory,
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="CD68",
marker2='HLA-DR',
marker3='',
marker4='',
marker5='',
region_of_interest='',
outcome='trem2_all',
remove_outliers=TRUE,
outliers_threshold='3.5'){
library(tidyverse)
library(readr)
library(stringr)
library(dplyr)
library(rqdatatable)
library(rlist)
library(ggplot2)
library(gridExtra)
library(ggsignif)
library(ggpubr)
library(paletteer)
library(kableExtra)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
source(paste0(CoMarker_directory,"/Functions/coloc_nroi.R"))
source(paste0(CoMarker_directory,"/Functions/coloc_ndnaroi.R"))
source(paste0(CoMarker_directory,"/Functions/coloc_ndna.R"))
source(paste0(CoMarker_directory,"/Functions/coloc.R"))
if(DNA==TRUE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome)
do.call(coloc_nroi,arg)
}
if(DNA==FALSE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome)
do.call(coloc_ndna,arg)
}
if(DNA==FALSE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome)
do.call(coloc_ndnaroi,arg)
}
if(DNA==TRUE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
filter_threshold=filter_threshold)
do.call(coloc,arg)
}
}
coloc_wrapper(image_directory="/Users/samboulger/Desktop/Sen_Exp_Iba1",
results_directory="/Users/samboulger/Desktop/Sen_Exp_Iba1",
CoMarker_directory='/Users/samboulger/OneDrive - Nexus365/Imperial/CoMarker Script',
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="p16",
marker2='GLB1',
marker3='',
marker4='',
marker5='',
region_of_interest='GLUT1',
outcome='AD/CTRL',
remove_outliers=TRUE,
outliers_threshold='3.5')
coloc_wrapper=function(image_directory,
results_directory,
CoMarker_directory,
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="CD68",
marker2='HLA-DR',
marker3='',
marker4='',
marker5='',
region_of_interest='',
outcome='trem2_all',
remove_outliers=TRUE,
outliers_threshold='3.5'){
library(tidyverse)
library(readr)
library(stringr)
library(dplyr)
library(rqdatatable)
library(rlist)
library(ggplot2)
library(gridExtra)
library(ggsignif)
library(ggpubr)
library(paletteer)
library(kableExtra)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
source(paste0(CoMarker_directory,"/Functions/coloc_nroi.R"))
source(paste0(CoMarker_directory,"/Functions/coloc_ndnaroi.R"))
source(paste0(CoMarker_directory,"/Functions/coloc_ndna.R"))
source(paste0(CoMarker_directory,"/Functions/coloc.R"))
if(DNA==TRUE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome)
do.call(coloc_nroi,arg)
}
if(DNA==FALSE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome)
do.call(coloc_ndna,arg)
}
if(DNA==FALSE && ROI==FALSE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome)
do.call(coloc_ndnaroi,arg)
}
if(DNA==TRUE && ROI==TRUE){
arg=list(image_directory=image_directory,
results_directory=results_directory,
CoMarker_directory=CoMarker_directory,
number_marker=number_marker,
reference_marker=reference_marker,
marker1=marker1,
marker2=marker2,
marker3=marker3,
marker4=marker4,
marker5=marker5,
region_of_interest=region_of_interest,
outcome=outcome,
remove_outliers=remove_outliers,
outliers_threshold=outliers_threshold)
do.call(coloc,arg)
}
}
coloc_wrapper(image_directory="/Users/samboulger/Desktop/Sen_Exp_Iba1",
results_directory="/Users/samboulger/Desktop/Sen_Exp_Iba1",
CoMarker_directory='/Users/samboulger/OneDrive - Nexus365/Imperial/CoMarker Script',
DNA=TRUE,
ROI=TRUE,
number_marker=2,
reference_marker="Iba1",
marker1="p16",
marker2='GLB1',
marker3='',
marker4='',
marker5='',
region_of_interest='GLUT1',
outcome='AD/CTRL',
remove_outliers=TRUE,
outliers_threshold='3.5')
library(blandr)
library(ggplot2)
library(readxl)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
Marker = 'Ab'
Ab_Counts <- read_excel("~/Library/CloudStorage/OneDrive-Nexus365/Imperial/Blind Manual Counts.xlsx",range = "B2:C24")
Ab_stats <- blandr.statistics(Ab_Counts$Manual, Ab_Counts$Script, sig.level = 0.95)
Ab_blandr <- blandr.draw(Ab_Counts$Manual, Ab_Counts$Script, ciDisplay = F, plotTitle = 'Bland-Altman Plot for Validation of CoMarker',
annotate = T)
Ab_blandr <- Ab_blandr + annotate('text', x = 12, y = 0.54, label= 'Upper Limit of Agreement = +1.96 SD')
Ab_blandr <- Ab_blandr + annotate('text', x = 12, y = -1.35, label= 'Lower Limit of Agreement = -1.96 SD')
Ab_blandr <- Ab_blandr + annotate('text', x = 13.5, y = -0.4, label= 'Mean Difference = -0.318')
Ab_blandr
library(blandr)
library(ggplot2)
library(readxl)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
Marker = 'Ab'
Ab_Counts <- read_excel("~/Library/CloudStorage/OneDrive-Nexus365/Imperial/Blind Manual Counts.xlsx",range = "G6:H23")
Ab_stats <- blandr.statistics(Ab_Counts$Manual, Ab_Counts$Script, sig.level = 0.95)
Ab_blandr <- blandr.draw(Ab_Counts$Manual, Ab_Counts$Script, ciDisplay = F, plotTitle = 'Bland-Altman Plot for Validation of CoMarker',
annotate = T)
Ab_blandr <- Ab_blandr + annotate('text', x = 12, y = 0.54, label= 'Upper Limit of Agreement = +1.96 SD')
Ab_blandr <- Ab_blandr + annotate('text', x = 12, y = -1.35, label= 'Lower Limit of Agreement = -1.96 SD')
Ab_blandr <- Ab_blandr + annotate('text', x = 13.5, y = -0.4, label= 'Mean Difference = -0.318')
Ab_blandr
View(Ab_Counts)
library(blandr)
library(ggplot2)
library(readxl)
palette_choice <- paletteer::paletteer_d("ggsci::nrc_npg")
Marker = 'Ab'
Ab_Counts <- read_excel("~/Library/CloudStorage/OneDrive-Nexus365/Imperial/Blind Manual Counts.xlsx",range = "G6:H23")
Ab_stats <- blandr.statistics(Ab_Counts$Manual, Ab_Counts$Script, sig.level = 0.95)
View(Ab_Counts)
Ab_stats <- blandr.statistics(Ab_Counts$'3', Ab_Counts$'4', sig.level = 0.95)
View(Ab_stats)
View(Ab_stats)
View(Ab_Counts)
bookdown::render_book("index.Rmd")
setwd("~/Desktop/bookdown-CoMarker")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
View(Blind_Manual_Counts)
View(Blind_Manual_Counts)
View(Blind_Manual_Counts)
View(Blind_Manual_Counts)
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
setwd("~/Documents/GitHub/CoMarker")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
